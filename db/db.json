{
  "puzzleQuestions": [
    {
      "id": "101",
      "category": "HTML",
      "imageUrl": "/html.png",
      "gridSize": {
        "rows": 4,
        "cols": 4
      },
      "points": 60,
      "type": "image-puzzle"
    },
    {
      "id": "102",
      "category": "CSS",
      "imageUrl": "/css.png",
      "gridSize": {
        "rows": 4,
        "cols": 4
      },
      "points": 60,
      "type": "image-puzzle"
    },
    {
      "id": "103",
      "category": "JavaScript",
      "imageUrl": "/js.png",
      "gridSize": {
        "rows": 4,
        "cols": 4
      },
      "points": 60,
      "type": "image-puzzle"
    },
    {
      "id": "104",
      "category": "React",
      "imageUrl": "/react.png",
      "gridSize": {
        "rows": 4,
        "cols": 4
      },
      "points": 60,
      "type": "image-puzzle"
    }
  ],
  "multipleChoiceQuestions": [
    {
      "id": "13",
      "category": "HTML",
      "question": "What is the correct HTML element for the largest heading?",
      "options": [
        {
          "id": "a",
          "text": "<heading>"
        },
        {
          "id": "b",
          "text": "<h6>"
        },
        {
          "id": "c",
          "text": "<head>"
        },
        {
          "id": "d",
          "text": "<h1>"
        }
      ],
      "correctAnswerId": "d",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "14",
      "category": "HTML",
      "question": "Which HTML tag is used to define an unordered list?",
      "options": [
        {
          "id": "a",
          "text": "<ol>"
        },
        {
          "id": "b",
          "text": "<ul>"
        },
        {
          "id": "c",
          "text": "<list>"
        },
        {
          "id": "d",
          "text": "<li>"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "15",
      "category": "HTML",
      "question": "What does the `<a>` tag define?",
      "options": [
        {
          "id": "a",
          "text": "An article"
        },
        {
          "id": "b",
          "text": "An abbreviation"
        },
        {
          "id": "c",
          "text": "A hyperlink"
        },
        {
          "id": "d",
          "text": "An aside"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "16",
      "category": "HTML",
      "question": "Which attribute specifies a unique id for an HTML element?",
      "options": [
        {
          "id": "a",
          "text": "class"
        },
        {
          "id": "b",
          "text": "id"
        },
        {
          "id": "c",
          "text": "name"
        },
        {
          "id": "d",
          "text": "identifier"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "53",
      "category": "HTML",
      "question": "Which HTML tag is used to define an image?",
      "options": [
        {
          "id": "a",
          "text": "<image>"
        },
        {
          "id": "b",
          "text": "<picture>"
        },
        {
          "id": "c",
          "text": "<src>"
        },
        {
          "id": "d",
          "text": "<img>"
        }
      ],
      "correctAnswerId": "d",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "54",
      "category": "HTML",
      "question": "What does the `alt` attribute in an `<img>` tag provide?",
      "options": [
        {
          "id": "a",
          "text": "The alignment of the image"
        },
        {
          "id": "b",
          "text": "Alternative text for the image if it cannot be displayed"
        },
        {
          "id": "c",
          "text": "A link to the image source"
        },
        {
          "id": "d",
          "text": "The title of the image"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "55",
      "category": "HTML",
      "question": "Which tag is used to define a paragraph?",
      "options": [
        {
          "id": "a",
          "text": "<paragraph>"
        },
        {
          "id": "b",
          "text": "<p>"
        },
        {
          "id": "c",
          "text": "<para>"
        },
        {
          "id": "d",
          "text": "<text>"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "56",
      "category": "HTML",
      "question": "Which tag defines the document's body?",
      "options": [
        {
          "id": "a",
          "text": "<head>"
        },
        {
          "id": "b",
          "text": "<main>"
        },
        {
          "id": "c",
          "text": "<body>"
        },
        {
          "id": "d",
          "text": "<content>"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "57",
      "category": "HTML",
      "question": "Which tag is used to create a line break?",
      "options": [
        {
          "id": "a",
          "text": "<lb>"
        },
        {
          "id": "b",
          "text": "<break>"
        },
        {
          "id": "c",
          "text": "<br>"
        },
        {
          "id": "d",
          "text": "<newline>"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "58",
      "category": "HTML",
      "question": "What does HTML stand for?",
      "options": [
        {
          "id": "a",
          "text": "Hyperlinks and Text Markup Language"
        },
        {
          "id": "b",
          "text": "Home Tool Markup Language"
        },
        {
          "id": "c",
          "text": "Hyper Text Markup Language"
        },
        {
          "id": "d",
          "text": "Hyper Tool Markup Language"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "17",
      "category": "HTML",
      "question": "Which HTML element is used to specify a footer for a document or section?",
      "options": [
        {
          "id": "a",
          "text": "<bottom>"
        },
        {
          "id": "b",
          "text": "<section>"
        },
        {
          "id": "c",
          "text": "<footer>"
        },
        {
          "id": "d",
          "text": "<end>"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "18",
      "category": "HTML",
      "question": "What is the purpose of the `<canvas>` element?",
      "options": [
        {
          "id": "a",
          "text": "To display tabular data"
        },
        {
          "id": "b",
          "text": "To embed video content"
        },
        {
          "id": "c",
          "text": "To draw graphics, on the fly, via scripting (usually JavaScript)"
        },
        {
          "id": "d",
          "text": "To create input controls for forms"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "19",
      "category": "HTML",
      "question": "Which input type defines a slider control?",
      "options": [
        {
          "id": "a",
          "text": "search"
        },
        {
          "id": "b",
          "text": "range"
        },
        {
          "id": "c",
          "text": "slider"
        },
        {
          "id": "d",
          "text": "number"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "21",
      "category": "HTML",
      "question": "Which tag is used to define navigation links?",
      "options": [
        {
          "id": "a",
          "text": "<navigate>"
        },
        {
          "id": "b",
          "text": "<nav>"
        },
        {
          "id": "c",
          "text": "<navigation>"
        },
        {
          "id": "d",
          "text": "<links>"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "59",
      "category": "HTML",
      "question": "Which tag defines an ordered list?",
      "options": [
        {
          "id": "a",
          "text": "<ul>"
        },
        {
          "id": "b",
          "text": "<ol>"
        },
        {
          "id": "c",
          "text": "<dl>"
        },
        {
          "id": "d",
          "text": "<li>"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "60",
      "category": "HTML",
      "question": "Which attribute specifies the URL of the page the link goes to?",
      "options": [
        {
          "id": "a",
          "text": "src"
        },
        {
          "id": "b",
          "text": "link"
        },
        {
          "id": "c",
          "text": "href"
        },
        {
          "id": "d",
          "text": "url"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "61",
      "category": "HTML",
      "question": "Which element is used to define important text?",
      "options": [
        {
          "id": "a",
          "text": "<i>"
        },
        {
          "id": "b",
          "text": "<important>"
        },
        {
          "id": "c",
          "text": "<strong>"
        },
        {
          "id": "d",
          "text": "<b>"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "62",
      "category": "HTML",
      "question": "Which element defines the title of a document?",
      "options": [
        {
          "id": "a",
          "text": "<head>"
        },
        {
          "id": "b",
          "text": "<meta>"
        },
        {
          "id": "c",
          "text": "<title>"
        },
        {
          "id": "d",
          "text": "<h1>"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "63",
      "category": "HTML",
      "question": "Which HTML element represents self-contained content, like a blog post or news article?",
      "options": [
        {
          "id": "a",
          "text": "<section>"
        },
        {
          "id": "b",
          "text": "<div>"
        },
        {
          "id": "c",
          "text": "<article>"
        },
        {
          "id": "d",
          "text": "<aside>"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "65",
      "category": "HTML",
      "question": "Which element is used to embed video content?",
      "options": [
        {
          "id": "a",
          "text": "<media>"
        },
        {
          "id": "b",
          "text": "<video>"
        },
        {
          "id": "c",
          "text": "<movie>"
        },
        {
          "id": "d",
          "text": "<embed>"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "20",
      "category": "HTML",
      "question": "What does the `DOCTYPE` declaration do?",
      "options": [
        {
          "id": "a",
          "text": "It defines the character set for the document"
        },
        {
          "id": "b",
          "text": "It links to an external stylesheet"
        },
        {
          "id": "c",
          "text": "It informs the browser about the document type and version of HTML"
        },
        {
          "id": "d",
          "text": "It creates a new document object"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "22",
      "category": "HTML",
      "question": "What is the difference between `<strong>` and `<b>` tags?",
      "options": [
        {
          "id": "a",
          "text": "There is no difference, they both make text bold"
        },
        {
          "id": "b",
          "text": "`<strong>` is semantic for importance, `<b>` is purely presentational bold"
        },
        {
          "id": "c",
          "text": "`<b>` is semantic for importance, `<strong>` is purely presentational bold"
        },
        {
          "id": "d",
          "text": "`<strong>` makes text larger, `<b>` makes text bold"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "64",
      "category": "HTML",
      "question": "What is the purpose of the `data-*` attributes?",
      "options": [
        {
          "id": "a",
          "text": "To style elements using CSS"
        },
        {
          "id": "b",
          "text": "To store custom data private to the page or application"
        },
        {
          "id": "c",
          "text": "To define the data type of an input field"
        },
        {
          "id": "d",
          "text": "To link to external data sources"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "66",
      "category": "HTML",
      "question": "What does the `<aside>` element represent?",
      "options": [
        {
          "id": "a",
          "text": "The main content of the document"
        },
        {
          "id": "b",
          "text": "Content tangentially related to the content around it (e.g., a sidebar)"
        },
        {
          "id": "c",
          "text": "A section containing navigation links"
        },
        {
          "id": "d",
          "text": "A self-contained article"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "67",
      "category": "HTML",
      "question": "Which attribute is used to specify that an input field must be filled out?",
      "options": [
        {
          "id": "a",
          "text": "placeholder"
        },
        {
          "id": "b",
          "text": "validate"
        },
        {
          "id": "c",
          "text": "required"
        },
        {
          "id": "d",
          "text": "mandatory"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "68",
      "category": "HTML",
      "question": "What is the purpose of the `<figure>` element?",
      "options": [
        {
          "id": "a",
          "text": "To define a mathematical figure"
        },
        {
          "id": "b",
          "text": "To create a drawing canvas"
        },
        {
          "id": "c",
          "text": "To encapsulate self-contained content, like illustrations, diagrams, photos, code listings, etc., potentially with a caption (<figcaption>)"
        },
        {
          "id": "d",
          "text": "To define a section of navigation links"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "69",
      "category": "HTML",
      "question": "What is the difference between `<div>` and `<span>`?",
      "options": [
        {
          "id": "a",
          "text": "Both are block-level elements"
        },
        {
          "id": "b",
          "text": "Both are inline elements"
        },
        {
          "id": "c",
          "text": "`<div>` is block-level, used for grouping larger sections; `<span>` is inline, used for smaller pieces of text or content within a block"
        },
        {
          "id": "d",
          "text": "`<span>` is block-level, `<div>` is inline"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "70",
      "category": "HTML",
      "question": "What is the purpose of the `rel=\"noopener\"` attribute on a link?",
      "options": [
        {
          "id": "a",
          "text": "It prevents the linked page from opening"
        },
        {
          "id": "b",
          "text": "It improves security by preventing the opened page from gaining access to the originating page's `window` object when `target=\"_blank\"` is used"
        },
        {
          "id": "c",
          "text": "It specifies the relationship is non-existent"
        },
        {
          "id": "d",
          "text": "It opens the link in a new, smaller popup window"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "71",
      "category": "HTML",
      "question": "Which tag is used to define a description list?",
      "options": [
        {
          "id": "a",
          "text": "<ul>"
        },
        {
          "id": "b",
          "text": "<ol>"
        },
        {
          "id": "c",
          "text": "<list>"
        },
        {
          "id": "d",
          "text": "<dl>"
        }
      ],
      "correctAnswerId": "d",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "72",
      "category": "HTML",
      "question": "What is the purpose of the `<template>` tag?",
      "options": [
        {
          "id": "a",
          "text": "To define a standard page layout"
        },
        {
          "id": "b",
          "text": "To hold HTML content that is not rendered immediately but can be instantiated later using JavaScript"
        },
        {
          "id": "c",
          "text": "To link to an external HTML template file"
        },
        {
          "id": "d",
          "text": "To create reusable custom elements"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "23",
      "category": "CSS",
      "question": "What does CSS stand for?",
      "options": [
        {
          "id": "a",
          "text": "Creative Style Sheets"
        },
        {
          "id": "b",
          "text": "Computer Style Sheets"
        },
        {
          "id": "c",
          "text": "Cascading Style Sheets"
        },
        {
          "id": "d",
          "text": "Colorful Style Sheets"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "24",
      "category": "CSS",
      "question": "Which HTML attribute is used to define inline styles?",
      "options": [
        {
          "id": "a",
          "text": "class"
        },
        {
          "id": "b",
          "text": "styles"
        },
        {
          "id": "c",
          "text": "font"
        },
        {
          "id": "d",
          "text": "style"
        }
      ],
      "correctAnswerId": "d",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "25",
      "category": "CSS",
      "question": "Which property is used to change the background color?",
      "options": [
        {
          "id": "a",
          "text": "color"
        },
        {
          "id": "b",
          "text": "bgcolor"
        },
        {
          "id": "c",
          "text": "background-color"
        },
        {
          "id": "d",
          "text": "background"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "26",
      "category": "CSS",
      "question": "How do you select an element with id 'header'?",
      "options": [
        {
          "id": "a",
          "text": ".header"
        },
        {
          "id": "b",
          "text": "*header"
        },
        {
          "id": "c",
          "text": "header"
        },
        {
          "id": "d",
          "text": "#header"
        }
      ],
      "correctAnswerId": "d",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "73",
      "category": "CSS",
      "question": "How do you select elements with the class name 'example'?",
      "options": [
        {
          "id": "a",
          "text": "#example"
        },
        {
          "id": "b",
          "text": "example"
        },
        {
          "id": "c",
          "text": ".example"
        },
        {
          "id": "d",
          "text": "*example"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "74",
      "category": "CSS",
      "question": "Which property is used to change the text color of an element?",
      "options": [
        {
          "id": "a",
          "text": "font-color"
        },
        {
          "id": "b",
          "text": "text-color"
        },
        {
          "id": "c",
          "text": "color"
        },
        {
          "id": "d",
          "text": "text-style"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "75",
      "category": "CSS",
      "question": "Which property is used to change the font size of text?",
      "options": [
        {
          "id": "a",
          "text": "text-size"
        },
        {
          "id": "b",
          "text": "font-style"
        },
        {
          "id": "c",
          "text": "font-size"
        },
        {
          "id": "d",
          "text": "size"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "76",
      "category": "CSS",
      "question": "How do you make text bold?",
      "options": [
        {
          "id": "a",
          "text": "font-style: bold;"
        },
        {
          "id": "b",
          "text": "text-weight: bold;"
        },
        {
          "id": "c",
          "text": "font-weight: bold;"
        },
        {
          "id": "d",
          "text": "style: bold;"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "77",
      "category": "CSS",
      "question": "Which property controls the space outside the border of an element?",
      "options": [
        {
          "id": "a",
          "text": "padding"
        },
        {
          "id": "b",
          "text": "margin"
        },
        {
          "id": "c",
          "text": "border-spacing"
        },
        {
          "id": "d",
          "text": "outline-offset"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "80",
      "category": "CSS",
      "question": "How do you add a comment in a CSS file?",
      "options": [
        {
          "id": "a",
          "text": "// This is a comment"
        },
        {
          "id": "b",
          "text": "<!-- This is a comment -->"
        },
        {
          "id": "c",
          "text": "/* This is a comment */"
        },
        {
          "id": "d",
          "text": "' This is a comment"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "27",
      "category": "CSS",
      "question": "Which property controls the space between the content and the border of an element?",
      "options": [
        {
          "id": "a",
          "text": "margin"
        },
        {
          "id": "b",
          "text": "padding"
        },
        {
          "id": "c",
          "text": "border-spacing"
        },
        {
          "id": "d",
          "text": "outline"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "28",
      "category": "CSS",
      "question": "What does the `z-index` property control?",
      "options": [
        {
          "id": "a",
          "text": "The zoom level of an element"
        },
        {
          "id": "b",
          "text": "The stack order (depth) of positioned elements"
        },
        {
          "id": "c",
          "text": "The horizontal alignment"
        },
        {
          "id": "d",
          "text": "The text indentation"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "29",
      "category": "CSS",
      "question": "Which value of the `display` property makes an element behave like an inline element but allows setting width and height?",
      "options": [
        {
          "id": "a",
          "text": "block"
        },
        {
          "id": "b",
          "text": "inline"
        },
        {
          "id": "c",
          "text": "inline-block"
        },
        {
          "id": "d",
          "text": "flex"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "32",
      "category": "CSS",
      "question": "How do you center a block-level element (like a div) horizontally within its container?",
      "options": [
        {
          "id": "a",
          "text": "text-align: center;"
        },
        {
          "id": "b",
          "text": "margin: auto;"
        },
        {
          "id": "c",
          "text": "padding: auto;"
        },
        {
          "id": "d",
          "text": "align-items: center;"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "78",
      "category": "CSS",
      "question": "How do you apply a style to all `<p>` elements?",
      "options": [
        {
          "id": "a",
          "text": "#p { ... }"
        },
        {
          "id": "b",
          "text": ".p { ... }"
        },
        {
          "id": "c",
          "text": "p { ... }"
        },
        {
          "id": "d",
          "text": "*p { ... }"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "79",
      "category": "CSS",
      "question": "Which property is used to set the background image of an element?",
      "options": [
        {
          "id": "a",
          "text": "background-color"
        },
        {
          "id": "b",
          "text": "image-src"
        },
        {
          "id": "c",
          "text": "background-image"
        },
        {
          "id": "d",
          "text": "bg-image"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "81",
      "category": "CSS",
      "question": "Which property is used to control the alignment of text?",
      "options": [
        {
          "id": "a",
          "text": "vertical-align"
        },
        {
          "id": "b",
          "text": "align-text"
        },
        {
          "id": "c",
          "text": "text-align"
        },
        {
          "id": "d",
          "text": "horizontal-align"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "82",
      "category": "CSS",
      "question": "Which value for the `position` property removes an element from the normal document flow and positions it relative to its nearest positioned ancestor?",
      "options": [
        {
          "id": "a",
          "text": "static"
        },
        {
          "id": "b",
          "text": "relative"
        },
        {
          "id": "c",
          "text": "absolute"
        },
        {
          "id": "d",
          "text": "fixed"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "83",
      "category": "CSS",
      "question": "Which CSS pseudo-class selects an element that is currently being hovered over by the mouse pointer?",
      "options": [
        {
          "id": "a",
          "text": ":active"
        },
        {
          "id": "b",
          "text": ":focus"
        },
        {
          "id": "c",
          "text": ":visited"
        },
        {
          "id": "d",
          "text": ":hover"
        }
      ],
      "correctAnswerId": "d",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "84",
      "category": "CSS",
      "question": "In the CSS Box Model, what is the correct order from innermost to outermost?",
      "options": [
        {
          "id": "a",
          "text": "Margin, Border, Padding, Content"
        },
        {
          "id": "b",
          "text": "Content, Padding, Border, Margin"
        },
        {
          "id": "c",
          "text": "Content, Margin, Padding, Border"
        },
        {
          "id": "d",
          "text": "Padding, Content, Border, Margin"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "30",
      "category": "CSS",
      "question": "What is CSS Specificity?",
      "options": [
        {
          "id": "a",
          "text": "A measure of how fast CSS rules are applied"
        },
        {
          "id": "b",
          "text": "The algorithm browsers use to determine which CSS rule applies if multiple rules target the same element"
        },
        {
          "id": "c",
          "text": "A way to specify styles for specific browsers"
        },
        {
          "id": "d",
          "text": "The file size of a CSS document"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "31",
      "category": "CSS",
      "question": "Which CSS unit is relative to the font-size of the root element?",
      "options": [
        {
          "id": "a",
          "text": "em"
        },
        {
          "id": "b",
          "text": "px"
        },
        {
          "id": "c",
          "text": "%"
        },
        {
          "id": "d",
          "text": "rem"
        }
      ],
      "correctAnswerId": "d",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "85",
      "category": "CSS",
      "question": "What does `display: flex;` do to an element?",
      "options": [
        {
          "id": "a",
          "text": "Makes it an inline element"
        },
        {
          "id": "b",
          "text": "Hides the element"
        },
        {
          "id": "c",
          "text": "Enables Flexbox layout for its direct children"
        },
        {
          "id": "d",
          "text": "Makes it absolutely positioned"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "86",
      "category": "CSS",
      "question": "Which property is used to create rounded corners?",
      "options": [
        {
          "id": "a",
          "text": "corner-radius"
        },
        {
          "id": "b",
          "text": "border-round"
        },
        {
          "id": "c",
          "text": "border-radius"
        },
        {
          "id": "d",
          "text": "round-corners"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "87",
      "category": "CSS",
      "question": "What is the difference between `visibility: hidden;` and `display: none;`?",
      "options": [
        {
          "id": "a",
          "text": "There is no difference."
        },
        {
          "id": "b",
          "text": "`visibility: hidden;` hides the element, but it still takes up space. `display: none;` removes the element entirely from the document flow."
        },
        {
          "id": "c",
          "text": "`display: none;` hides the element, but it still takes up space. `visibility: hidden;` removes the element entirely."
        },
        {
          "id": "d",
          "text": "`visibility: hidden;` only works on images, `display: none;` works on all elements."
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "88",
      "category": "CSS",
      "question": "Which selector has the highest specificity: `div p`, `.content p`, `#main p`?",
      "options": [
        {
          "id": "a",
          "text": "`div p`"
        },
        {
          "id": "b",
          "text": "`.content p`"
        },
        {
          "id": "c",
          "text": "`#main p`"
        },
        {
          "id": "d",
          "text": "They have the same specificity"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "89",
      "category": "CSS",
      "question": "What does the `!important` rule do in CSS?",
      "options": [
        {
          "id": "a",
          "text": "Marks the style as important for documentation"
        },
        {
          "id": "b",
          "text": "Imports another stylesheet"
        },
        {
          "id": "c",
          "text": "Overrides any other declarations for that property, regardless of specificity"
        },
        {
          "id": "d",
          "text": "Applies the style only to `<p>` tags"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "90",
      "category": "CSS",
      "question": "Consider the selectors: `p`, `.myClass`, `p.myClass`, `#myId`. Rank them from lowest to highest specificity.",
      "options": [
        {
          "id": "a",
          "text": "`p`, `.myClass`, `p.myClass`, `#myId`"
        },
        {
          "id": "b",
          "text": "`p`, `p.myClass`, `.myClass`, `#myId`"
        },
        {
          "id": "c",
          "text": "`#myId`, `p.myClass`, `.myClass`, `p`"
        },
        {
          "id": "d",
          "text": "`p`, `.myClass`, `#myId`, `p.myClass`"
        }
      ],
      "correctAnswerId": "a",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "91",
      "category": "CSS",
      "question": "What are CSS Custom Properties (Variables)?",
      "options": [
        {
          "id": "a",
          "text": "Variables defined in JavaScript used to style elements"
        },
        {
          "id": "b",
          "text": "Entities defined by authors that contain specific values to be reused throughout a document (e.g., `--main-color: black;`)"
        },
        {
          "id": "c",
          "text": "Browser-defined properties that cannot be changed"
        },
        {
          "id": "d",
          "text": "Properties specific to certain CSS frameworks"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "92",
      "category": "CSS",
      "question": "What is the purpose of the `calc()` function in CSS?",
      "options": [
        {
          "id": "a",
          "text": "To calculate the specificity of a selector"
        },
        {
          "id": "b",
          "text": "To perform mathematical calculations on property values"
        },
        {
          "id": "c",
          "text": "To trigger JavaScript calculations"
        },
        {
          "id": "d",
          "text": "To define calculator-like interfaces"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "33",
      "category": "JavaScript",
      "question": "Inside which HTML element do we put the JavaScript?",
      "options": [
        {
          "id": "a",
          "text": "<js>"
        },
        {
          "id": "b",
          "text": "<javascript>"
        },
        {
          "id": "c",
          "text": "<scripting>"
        },
        {
          "id": "d",
          "text": "<script>"
        }
      ],
      "correctAnswerId": "d",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "34",
      "category": "JavaScript",
      "question": "How do you write 'Hello World' in an alert box?",
      "options": [
        {
          "id": "a",
          "text": "msg('Hello World');"
        },
        {
          "id": "b",
          "text": "alertBox('Hello World');"
        },
        {
          "id": "c",
          "text": "alert('Hello World');"
        },
        {
          "id": "d",
          "text": "msgBox('Hello World');"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "35",
      "category": "JavaScript",
      "question": "How do you create a function in JavaScript?",
      "options": [
        {
          "id": "a",
          "text": "function:myFunction()"
        },
        {
          "id": "b",
          "text": "function = myFunction()"
        },
        {
          "id": "c",
          "text": "function myFunction()"
        },
        {
          "id": "d",
          "text": "create function myFunction()"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "36",
      "category": "JavaScript",
      "question": "How do you call a function named 'myFunction'?",
      "options": [
        {
          "id": "a",
          "text": "call function myFunction()"
        },
        {
          "id": "b",
          "text": "call myFunction()"
        },
        {
          "id": "c",
          "text": "myFunction()"
        },
        {
          "id": "d",
          "text": "execute myFunction()"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "37",
      "category": "JavaScript",
      "question": "How can you add a comment in JavaScript?",
      "options": [
        {
          "id": "a",
          "text": "'This is a comment"
        },
        {
          "id": "b",
          "text": "<!--This is a comment-->"
        },
        {
          "id": "c",
          "text": "// This is a comment"
        },
        {
          "id": "d",
          "text": "** This is a comment **"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "93",
      "category": "JavaScript",
      "question": "Which keyword is used to declare a variable that can be reassigned?",
      "options": [
        {
          "id": "a",
          "text": "const"
        },
        {
          "id": "b",
          "text": "var"
        },
        {
          "id": "c",
          "text": "let"
        },
        {
          "id": "d",
          "text": "static"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "94",
      "category": "JavaScript",
      "question": "What operator is used for assignment?",
      "options": [
        {
          "id": "a",
          "text": "=="
        },
        {
          "id": "b",
          "text": "="
        },
        {
          "id": "c",
          "text": "==="
        },
        {
          "id": "d",
          "text": ":="
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "95",
      "category": "JavaScript",
      "question": "How do you write an IF statement in JavaScript?",
      "options": [
        {
          "id": "a",
          "text": "if i = 5 then"
        },
        {
          "id": "b",
          "text": "if (i == 5)"
        },
        {
          "id": "c",
          "text": "if i == 5"
        },
        {
          "id": "d",
          "text": "if i = 5"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "98",
      "category": "JavaScript",
      "question": "What is the result of `typeof \"Hello\"`?",
      "options": [
        {
          "id": "a",
          "text": "\"string\""
        },
        {
          "id": "b",
          "text": "\"text\""
        },
        {
          "id": "c",
          "text": "\"String\""
        },
        {
          "id": "d",
          "text": "\"object\""
        }
      ],
      "correctAnswerId": "a",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "99",
      "category": "JavaScript",
      "question": "Which operator means 'not equal' (value only)?",
      "options": [
        {
          "id": "a",
          "text": "<>"
        },
        {
          "id": "b",
          "text": "!=="
        },
        {
          "id": "c",
          "text": "!="
        },
        {
          "id": "d",
          "text": "!"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "38",
      "category": "JavaScript",
      "question": "What is the correct way to write a JavaScript array?",
      "options": [
        {
          "id": "a",
          "text": "var colors = (1:'red', 2:'green', 3:'blue')"
        },
        {
          "id": "b",
          "text": "var colors = ['red', 'green', 'blue']"
        },
        {
          "id": "c",
          "text": "var colors = 'red', 'green', 'blue'"
        },
        {
          "id": "d",
          "text": "var colors = { 'red', 'green', 'blue' }"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "39",
      "category": "JavaScript",
      "question": "Which event occurs when the user clicks on an HTML element?",
      "options": [
        {
          "id": "a",
          "text": "onchange"
        },
        {
          "id": "b",
          "text": "onmouseclick"
        },
        {
          "id": "c",
          "text": "onmouseover"
        },
        {
          "id": "d",
          "text": "onclick"
        }
      ],
      "correctAnswerId": "d",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "40",
      "category": "JavaScript",
      "question": "What does `JSON.stringify()` do?",
      "options": [
        {
          "id": "a",
          "text": "Parses a JSON string into a JavaScript object"
        },
        {
          "id": "b",
          "text": "Converts a JavaScript object or value into a JSON string"
        },
        {
          "id": "c",
          "text": "Validates a JSON string"
        },
        {
          "id": "d",
          "text": "Fetches data from a JSON file"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "96",
      "category": "JavaScript",
      "question": "How does a FOR loop start?",
      "options": [
        {
          "id": "a",
          "text": "for (i = 0; i <= 5)"
        },
        {
          "id": "b",
          "text": "for i = 1 to 5"
        },
        {
          "id": "c",
          "text": "for (i <= 5; i++)"
        },
        {
          "id": "d",
          "text": "for (let i = 0; i < 5; i++)"
        }
      ],
      "correctAnswerId": "d",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "97",
      "category": "JavaScript",
      "question": "How can you get the length of a string variable `txt`?",
      "options": [
        {
          "id": "a",
          "text": "txt.length()"
        },
        {
          "id": "b",
          "text": "length(txt)"
        },
        {
          "id": "c",
          "text": "txt.length"
        },
        {
          "id": "d",
          "text": "len(txt)"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "100",
      "category": "JavaScript",
      "question": "How do you round the number 7.25 to the nearest integer?",
      "options": [
        {
          "id": "a",
          "text": "Math.rnd(7.25)"
        },
        {
          "id": "b",
          "text": "round(7.25)"
        },
        {
          "id": "c",
          "text": "Math.round(7.25)"
        },
        {
          "id": "d",
          "text": "rnd(7.25)"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "101",
      "category": "JavaScript",
      "question": "How do you declare a JavaScript object?",
      "options": [
        {
          "id": "a",
          "text": "var car = {type:'Fiat', model:'500'};"
        },
        {
          "id": "b",
          "text": "var car = (type:'Fiat', model:'500');"
        },
        {
          "id": "c",
          "text": "var car = [type:'Fiat', model:'500'];"
        },
        {
          "id": "d",
          "text": "var car = <type:'Fiat', model:'500'>;"
        }
      ],
      "correctAnswerId": "a",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "102",
      "category": "JavaScript",
      "question": "Which built-in method returns the calling string value converted to upper case?",
      "options": [
        {
          "id": "a",
          "text": "toUpperCase()"
        },
        {
          "id": "b",
          "text": "toUpper()"
        },
        {
          "id": "c",
          "text": "changeCase(upper)"
        },
        {
          "id": "d",
          "text": "upperCase()"
        }
      ],
      "correctAnswerId": "a",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "106",
      "category": "JavaScript",
      "question": "How do you select an HTML element with the id 'myElement' using JavaScript?",
      "options": [
        {
          "id": "a",
          "text": "document.select('#myElement')"
        },
        {
          "id": "b",
          "text": "document.getElement('myElement')"
        },
        {
          "id": "c",
          "text": "document.getElementById('myElement')"
        },
        {
          "id": "d",
          "text": "document.querySelector('myElement')"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "107",
      "category": "JavaScript",
      "question": "What does `JSON.parse()` do?",
      "options": [
        {
          "id": "a",
          "text": "Converts a JavaScript object or value into a JSON string"
        },
        {
          "id": "b",
          "text": "Parses a JSON string into a JavaScript object"
        },
        {
          "id": "c",
          "text": "Stringifies a JSON object"
        },
        {
          "id": "d",
          "text": "Validates a JavaScript object"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "41",
      "category": "JavaScript",
      "question": "What is a 'closure' in JavaScript?",
      "options": [
        {
          "id": "a",
          "text": "A way to close the browser window"
        },
        {
          "id": "b",
          "text": "A syntax error that closes the script"
        },
        {
          "id": "c",
          "text": "A function having access to the parent scope, even after the parent function has closed"
        },
        {
          "id": "d",
          "text": "The final statement in a function"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "42",
      "category": "JavaScript",
      "question": "What is the purpose of `async` and `await` keywords?",
      "options": [
        {
          "id": "a",
          "text": "To define synchronous functions"
        },
        {
          "id": "b",
          "text": "To handle errors in code"
        },
        {
          "id": "c",
          "text": "To write asynchronous code in a more synchronous-looking fashion, handling Promises"
        },
        {
          "id": "d",
          "text": "To declare variables that change asynchronously"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "103",
      "category": "JavaScript",
      "question": "Which array method creates a new array populated with the results of calling a provided function on every element?",
      "options": [
        {
          "id": "a",
          "text": ".forEach()"
        },
        {
          "id": "b",
          "text": ".map()"
        },
        {
          "id": "c",
          "text": ".filter()"
        },
        {
          "id": "d",
          "text": ".reduce()"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "104",
      "category": "JavaScript",
      "question": "Which array method creates a new array with all elements that pass the test implemented by the provided function?",
      "options": [
        {
          "id": "a",
          "text": ".map()"
        },
        {
          "id": "b",
          "text": ".forEach()"
        },
        {
          "id": "c",
          "text": ".filter()"
        },
        {
          "id": "d",
          "text": ".reduce()"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "105",
      "category": "JavaScript",
      "question": "Which array method executes a reducer function on each element of the array, resulting in a single output value?",
      "options": [
        {
          "id": "a",
          "text": ".map()"
        },
        {
          "id": "b",
          "text": ".filter()"
        },
        {
          "id": "c",
          "text": ".forEach()"
        },
        {
          "id": "d",
          "text": ".reduce()"
        }
      ],
      "correctAnswerId": "d",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "108",
      "category": "JavaScript",
      "question": "What is the difference between `==` and `===`?",
      "options": [
        {
          "id": "a",
          "text": "They are identical."
        },
        {
          "id": "b",
          "text": "`==` checks for value equality with type coercion, `===` checks for value and type equality without coercion."
        },
        {
          "id": "c",
          "text": "`===` checks for value equality with type coercion, `==` checks for value and type equality without coercion."
        },
        {
          "id": "d",
          "text": "`==` is for numbers, `===` is for strings."
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "109",
      "category": "JavaScript",
      "question": "What is prototypal inheritance?",
      "options": [
        {
          "id": "a",
          "text": "A way to create private variables"
        },
        {
          "id": "b",
          "text": "A feature where objects can inherit properties and methods from other objects (their prototype)"
        },
        {
          "id": "c",
          "text": "A design pattern for handling asynchronous operations"
        },
        {
          "id": "d",
          "text": "The process of copying properties from one object to another"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "110",
      "category": "JavaScript",
      "question": "What is the Event Loop?",
      "options": [
        {
          "id": "a",
          "text": "A `for` loop used for handling events"
        },
        {
          "id": "b",
          "text": "A browser API for looping animations"
        },
        {
          "id": "c",
          "text": "A mechanism in JavaScript runtime that handles execution of code, collects and processes events, and executes queued sub-tasks (like Promises and callbacks)"
        },
        {
          "id": "d",
          "text": "A way to iterate over event listeners"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "111",
      "category": "JavaScript",
      "question": "What does the `this` keyword refer to in a standard function call (not an arrow function) inside an object method?",
      "options": [
        {
          "id": "a",
          "text": "The global window object"
        },
        {
          "id": "b",
          "text": "The function itself"
        },
        {
          "id": "c",
          "text": "The object that the method was called on"
        },
        {
          "id": "d",
          "text": "`undefined` in strict mode"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "112",
      "category": "JavaScript",
      "question": "What is a Promise in JavaScript?",
      "options": [
        {
          "id": "a",
          "text": "A guarantee that a function will execute without errors"
        },
        {
          "id": "b",
          "text": "A syntax for declaring asynchronous functions"
        },
        {
          "id": "c",
          "text": "An object representing the eventual completion (or failure) of an asynchronous operation and its resulting value"
        },
        {
          "id": "d",
          "text": "A way to store callback functions"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "43",
      "category": "React",
      "question": "What is React primarily used for?",
      "options": [
        {
          "id": "a",
          "text": "Server-side scripting"
        },
        {
          "id": "b",
          "text": "Database management"
        },
        {
          "id": "c",
          "text": "Building user interfaces"
        },
        {
          "id": "d",
          "text": "Machine learning"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "44",
      "category": "React",
      "question": "What is JSX?",
      "options": [
        {
          "id": "a",
          "text": "A JavaScript data format"
        },
        {
          "id": "b",
          "text": "A CSS preprocessor"
        },
        {
          "id": "c",
          "text": "A syntax extension for JavaScript, often used with React to describe UI structure"
        },
        {
          "id": "d",
          "text": "A type of React component"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "45",
      "category": "React",
      "question": "How do you pass data from a parent component to a child component?",
      "options": [
        {
          "id": "a",
          "text": "Using state"
        },
        {
          "id": "b",
          "text": "Using props"
        },
        {
          "id": "c",
          "text": "Using context"
        },
        {
          "id": "d",
          "text": "Using refs"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "46",
      "category": "React",
      "question": "Which hook would you use to add state to a functional component?",
      "options": [
        {
          "id": "a",
          "text": "useEffect"
        },
        {
          "id": "b",
          "text": "useContext"
        },
        {
          "id": "c",
          "text": "useState"
        },
        {
          "id": "d",
          "text": "useReducer"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "113",
      "category": "React",
      "question": "What is a common way to create a React component?",
      "options": [
        {
          "id": "a",
          "text": "Using a JavaScript object"
        },
        {
          "id": "b",
          "text": "Using an HTML template"
        },
        {
          "id": "c",
          "text": "Using a JavaScript function or class"
        },
        {
          "id": "d",
          "text": "Using a CSS class"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "114",
      "category": "React",
      "question": "In React, what do you call the syntax that looks like HTML within JavaScript?",
      "options": [
        {
          "id": "a",
          "text": "HTMLScript"
        },
        {
          "id": "b",
          "text": "JSX"
        },
        {
          "id": "c",
          "text": "ReactHTML"
        },
        {
          "id": "d",
          "text": "ScriptX"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "115",
      "category": "React",
      "question": "How do you render a React element into the DOM?",
      "options": [
        {
          "id": "a",
          "text": "React.render()"
        },
        {
          "id": "b",
          "text": "ReactDOM.render() (Legacy) or createRoot().render() (React 18+)"
        },
        {
          "id": "c",
          "text": "Component.render()"
        },
        {
          "id": "d",
          "text": "DOM.renderElement()"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "116",
      "category": "React",
      "question": "What is used to pass data to a component from outside?",
      "options": [
        {
          "id": "a",
          "text": "state"
        },
        {
          "id": "b",
          "text": "props"
        },
        {
          "id": "c",
          "text": "setState"
        },
        {
          "id": "d",
          "text": "arguments"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "118",
      "category": "React",
      "question": "What does `useState` return?",
      "options": [
        {
          "id": "a",
          "text": "Just the state value"
        },
        {
          "id": "b",
          "text": "Just the function to update the state"
        },
        {
          "id": "c",
          "text": "An array with the current state value and a function to update it"
        },
        {
          "id": "d",
          "text": "An object with the state value and updater function"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "120",
      "category": "React",
      "question": "What is the main function of a React component?",
      "options": [
        {
          "id": "a",
          "text": "To fetch data from an API"
        },
        {
          "id": "b",
          "text": "To manage application state globally"
        },
        {
          "id": "c",
          "text": "To return React elements describing a UI segment"
        },
        {
          "id": "d",
          "text": "To directly manipulate the DOM"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10,
      "type": "multiple-choice"
    },
    {
      "id": "47",
      "category": "React",
      "question": "What is the purpose of the `useEffect` hook?",
      "options": [
        {
          "id": "a",
          "text": "To manage component state"
        },
        {
          "id": "b",
          "text": "To perform side effects in functional components (e.g., data fetching, subscriptions)"
        },
        {
          "id": "c",
          "text": "To pass data between components"
        },
        {
          "id": "d",
          "text": "To define the component's structure"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "48",
      "category": "React",
      "question": "How do you render a list of items in React?",
      "options": [
        {
          "id": "a",
          "text": "Using a `for` loop directly inside JSX"
        },
        {
          "id": "b",
          "text": "Using the `.map()` array method inside JSX"
        },
        {
          "id": "c",
          "text": "Using the `<list>` component"
        },
        {
          "id": "d",
          "text": "Using `forEach` inside JSX"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "49",
      "category": "React",
      "question": "What is required for each item when rendering a list using `.map()`?",
      "options": [
        {
          "id": "a",
          "text": "A unique `id` attribute"
        },
        {
          "id": "b",
          "text": "A unique `key` prop"
        },
        {
          "id": "c",
          "text": "A `className` prop"
        },
        {
          "id": "d",
          "text": "An `index` prop"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "50",
      "category": "React",
      "question": "What is the difference between state and props?",
      "options": [
        {
          "id": "a",
          "text": "Props are managed within the component, state is passed from the parent"
        },
        {
          "id": "b",
          "text": "State is managed within the component, props are passed from the parent"
        },
        {
          "id": "c",
          "text": "Both are managed within the component"
        },
        {
          "id": "d",
          "text": "Both are passed from the parent"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "117",
      "category": "React",
      "question": "In JSX, how do you embed a JavaScript expression?",
      "options": [
        {
          "id": "a",
          "text": "Using double quotes: \"{expression}\""
        },
        {
          "id": "b",
          "text": "Using square brackets: [expression]"
        },
        {
          "id": "c",
          "text": "Using curly braces: {expression}"
        },
        {
          "id": "d",
          "text": "Using parentheses: (expression)"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "119",
      "category": "React",
      "question": "How do you apply a CSS class to a JSX element?",
      "options": [
        {
          "id": "a",
          "text": "class=\"my-class\""
        },
        {
          "id": "b",
          "text": "cssClass=\"my-class\""
        },
        {
          "id": "c",
          "text": "className=\"my-class\""
        },
        {
          "id": "d",
          "text": "styleClass=\"my-class\""
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "121",
      "category": "React",
      "question": "How do you write comments inside JSX?",
      "options": [
        {
          "id": "a",
          "text": "// comment"
        },
        {
          "id": "b",
          "text": "<!-- comment -->"
        },
        {
          "id": "c",
          "text": "{/* comment */}"
        },
        {
          "id": "d",
          "text": "/* comment */"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "122",
      "category": "React",
      "question": "What must functional component names start with?",
      "options": [
        {
          "id": "a",
          "text": "A lowercase letter"
        },
        {
          "id": "b",
          "text": "An underscore"
        },
        {
          "id": "c",
          "text": "An uppercase letter"
        },
        {
          "id": "d",
          "text": "A dollar sign"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "123",
      "category": "React",
      "question": "How do you handle events (like clicks) in React?",
      "options": [
        {
          "id": "a",
          "text": "Using standard HTML event attributes like `onclick`"
        },
        {
          "id": "b",
          "text": "Using camelCase event handler props like `onClick`"
        },
        {
          "id": "c",
          "text": "Using `addEventListener` directly on the component"
        },
        {
          "id": "d",
          "text": "Using the `handleEvent` prop"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "124",
      "category": "React",
      "question": "What is the second argument passed to `useEffect` used for?",
      "options": [
        {
          "id": "a",
          "text": "The initial state value"
        },
        {
          "id": "b",
          "text": "A cleanup function"
        },
        {
          "id": "c",
          "text": "A dependency array to control when the effect runs"
        },
        {
          "id": "d",
          "text": "The component's props"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20,
      "type": "multiple-choice"
    },
    {
      "id": "51",
      "category": "React",
      "question": "What problem does the `useContext` hook solve?",
      "options": [
        {
          "id": "a",
          "text": "Managing local component state"
        },
        {
          "id": "b",
          "text": "Performing side effects"
        },
        {
          "id": "c",
          "text": "Avoiding 'prop drilling' by allowing components to consume data from a context provider"
        },
        {
          "id": "d",
          "text": "Memoizing expensive calculations"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "52",
      "category": "React",
      "question": "What is the Virtual DOM?",
      "options": [
        {
          "id": "a",
          "text": "A direct representation of the actual browser DOM"
        },
        {
          "id": "b",
          "text": "A backup copy of the DOM stored in localStorage"
        },
        {
          "id": "c",
          "text": "A programming concept where a virtual representation of a UI is kept in memory and synced with the real DOM by a library like React DOM"
        },
        {
          "id": "d",
          "text": "A specific HTML element for creating virtual reality experiences"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "125",
      "category": "React",
      "question": "How can you conditionally render a component or JSX?",
      "options": [
        {
          "id": "a",
          "text": "Using CSS `display: none` only"
        },
        {
          "id": "b",
          "text": "Using JavaScript operators like `if/else`, ternary (`? :`), or logical AND (`&&`) within the component's return"
        },
        {
          "id": "c",
          "text": "Using a special `<conditional>` tag"
        },
        {
          "id": "d",
          "text": "React automatically handles conditional rendering"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "126",
      "category": "React",
      "question": "What is the purpose of a React Fragment (`<>...</>` or `<Fragment>...</Fragment>`)?",
      "options": [
        {
          "id": "a",
          "text": "To add extra styling"
        },
        {
          "id": "b",
          "text": "To group multiple elements without adding an extra node to the DOM"
        },
        {
          "id": "c",
          "text": "To create a reusable component"
        },
        {
          "id": "d",
          "text": "To handle component state"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "127",
      "category": "React",
      "question": "In a class component, which lifecycle method is invoked immediately after a component is mounted (inserted into the tree)?",
      "options": [
        {
          "id": "a",
          "text": "render()"
        },
        {
          "id": "b",
          "text": "constructor()"
        },
        {
          "id": "c",
          "text": "componentDidMount()"
        },
        {
          "id": "d",
          "text": "componentWillMount() (Deprecated)"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "128",
      "category": "React",
      "question": "What is a Higher-Order Component (HOC)?",
      "options": [
        {
          "id": "a",
          "text": "A component with more complex state logic"
        },
        {
          "id": "b",
          "text": "A component rendered at the top level of the application"
        },
        {
          "id": "c",
          "text": "A function that takes a component and returns a new component, often used for reusing component logic"
        },
        {
          "id": "d",
          "text": "A built-in React component like `<Fragment>`"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "129",
      "category": "React",
      "question": "What is the purpose of the `useRef` hook?",
      "options": [
        {
          "id": "a",
          "text": "To manage component state like `useState`"
        },
        {
          "id": "b",
          "text": "To perform side effects like `useEffect`"
        },
        {
          "id": "c",
          "text": "To get a mutable ref object whose `.current` property can hold a value or reference a DOM element, persisting across renders without causing re-renders"
        },
        {
          "id": "d",
          "text": "To share state between components like `useContext`"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "130",
      "category": "React",
      "question": "What is 'prop drilling' and how can it be avoided?",
      "options": [
        {
          "id": "a",
          "text": "Drilling holes in props; avoid by using state."
        },
        {
          "id": "b",
          "text": "Passing props down multiple levels of components; can be avoided using Context API or state management libraries (like Redux/Zustand)."
        },
        {
          "id": "c",
          "text": "A performance issue caused by too many props; avoid by using fewer components."
        },
        {
          "id": "d",
          "text": "Using props for event handling; avoid by using refs."
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "131",
      "category": "React",
      "question": "What is the purpose of `React.memo`?",
      "options": [
        {
          "id": "a",
          "text": "To memorize API calls"
        },
        {
          "id": "b",
          "text": "A HOC that memoizes a functional component, preventing re-renders if its props haven't changed"
        },
        {
          "id": "c",
          "text": "To create memo pads within a React app"
        },
        {
          "id": "d",
          "text": "To manage component memory usage"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    },
    {
      "id": "132",
      "category": "React",
      "question": "What are Render Props?",
      "options": [
        {
          "id": "a",
          "text": "Props used specifically in the render method"
        },
        {
          "id": "b",
          "text": "A way to pass JSX elements as props"
        },
        {
          "id": "c",
          "text": "A technique for sharing code between components using a prop whose value is a function that returns a React element"
        },
        {
          "id": "d",
          "text": "Props that determine if a component should render"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30,
      "type": "multiple-choice"
    }
  ],
  "highestScores": [
    {
      "id": "html_easy",
      "category": "html",
      "difficultySetting": "easy",
      "userName": "ReiKoka",
      "score": 160,
      "time": 41,
      "date": "2023-10-27T10:30:00.000Z"
    },
    {
      "id": "css_easy",
      "category": "css",
      "difficultySetting": "easy",
      "userName": "ReiKoka",
      "score": 160,
      "time": 78
    },
    {
      "id": "html_all",
      "category": "html",
      "difficultySetting": "all",
      "userName": "Rei Koka",
      "score": 180,
      "time": 23,
      "date": "2025-04-02T10:01:42.219Z"
    },
    {
      "id": "html_medium",
      "category": "html",
      "difficultySetting": "medium",
      "userName": "ReiKoka",
      "score": 240,
      "time": 78,
      "date": "2025-04-04T08:17:00.921Z"
    },
    {
      "id": "javascript_easy",
      "category": "javascript",
      "difficultySetting": "easy",
      "userName": "ReiKoka",
      "score": 160,
      "time": 44,
      "date": "2025-04-04T08:55:32.345Z"
    }
  ],
  "results": [
    {
      "id": "4b5a",
      "category": "HTML",
      "difficultySetting": "easy",
      "userName": "Rei Koka",
      "points": 140,
      "maxPossiblePoints": 140,
      "totalTimeTaken": 31,
      "date": "2025-04-02T12:26:20.986Z"
    },
    {
      "id": "26e7",
      "category": "HTML",
      "difficultySetting": "easy",
      "userName": "ReiKoka",
      "points": 160,
      "maxPossiblePoints": 160,
      "totalTimeTaken": 48,
      "date": "2025-04-04T07:28:14.464Z"
    },
    {
      "id": "896b",
      "category": "HTML",
      "difficultySetting": "easy",
      "userName": "ReiKoka",
      "points": 160,
      "maxPossiblePoints": 160,
      "totalTimeTaken": 40,
      "date": "2025-04-04T07:29:28.841Z"
    },
    {
      "id": "2fb8",
      "category": "CSS",
      "difficultySetting": "easy",
      "userName": "ReiKoka",
      "points": 160,
      "maxPossiblePoints": 160,
      "totalTimeTaken": 78,
      "date": "2025-04-04T07:42:57.776Z"
    },
    {
      "id": "b4f4",
      "category": "HTML",
      "difficultySetting": "medium",
      "userName": "ReiKoka",
      "points": 240,
      "maxPossiblePoints": 260,
      "totalTimeTaken": 78,
      "date": "2025-04-04T08:17:00.865Z"
    },
    {
      "id": "5a96",
      "category": "HTML",
      "difficultySetting": "easy",
      "userName": "ReiKoka",
      "points": 160,
      "maxPossiblePoints": 160,
      "totalTimeTaken": 123,
      "date": "2025-04-04T08:44:15.711Z"
    },
    {
      "id": "0574",
      "category": "JavaScript",
      "difficultySetting": "easy",
      "userName": "ReiKoka",
      "points": 160,
      "maxPossiblePoints": 160,
      "totalTimeTaken": 71,
      "date": "2025-04-04T08:55:32.293Z"
    },
    {
      "id": "aa73",
      "category": "JavaScript",
      "difficultySetting": "easy",
      "userName": "ReiKoka",
      "points": 160,
      "maxPossiblePoints": 160,
      "totalTimeTaken": 116,
      "date": "2025-04-04T08:58:58.399Z"
    },
    {
      "id": "c262",
      "category": "HTML",
      "difficultySetting": "easy",
      "userName": "ReiKoka",
      "points": 160,
      "maxPossiblePoints": 160,
      "totalTimeTaken": 118,
      "date": "2025-04-04T09:42:32.396Z"
    },
    {
      "id": "2fb2",
      "category": "HTML",
      "difficultySetting": "easy",
      "userName": "ReiKoka",
      "points": 160,
      "maxPossiblePoints": 160,
      "totalTimeTaken": 117,
      "date": "2025-04-04T09:46:12.878Z"
    },
    {
      "id": "c453",
      "category": "HTML",
      "difficultySetting": "easy",
      "userName": "ReiKoka",
      "points": 150,
      "maxPossiblePoints": 160,
      "totalTimeTaken": 119,
      "date": "2025-04-04T10:07:14.329Z"
    },
    {
      "id": "5afe",
      "category": "HTML",
      "difficultySetting": "easy",
      "userName": "ReiKoka",
      "points": 160,
      "maxPossiblePoints": 160,
      "totalTimeTaken": 114,
      "date": "2025-04-04T10:08:29.409Z"
    },
    {
      "id": "6b36",
      "category": "HTML",
      "difficultySetting": "easy",
      "userName": "ReiKoka",
      "points": 160,
      "maxPossiblePoints": 160,
      "totalTimeTaken": 119,
      "date": "2025-04-04T10:10:58.415Z"
    }
  ]
}