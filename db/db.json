{
  "questions": [
    {
      "id": 13,
      "category": "HTML",
      "question": "What is the correct HTML element for the largest heading?",
      "options": [
        {
          "id": "a",
          "text": "<heading>"
        },
        {
          "id": "b",
          "text": "<h6>"
        },
        {
          "id": "c",
          "text": "<head>"
        },
        {
          "id": "d",
          "text": "<h1>"
        }
      ],
      "correctAnswerId": "d",
      "difficulty": "easy",
      "points": 10
    },
    {
      "id": 14,
      "category": "HTML",
      "question": "Which HTML tag is used to define an unordered list?",
      "options": [
        {
          "id": "a",
          "text": "<ol>"
        },
        {
          "id": "b",
          "text": "<ul>"
        },
        {
          "id": "c",
          "text": "<list>"
        },
        {
          "id": "d",
          "text": "<li>"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "easy",
      "points": 10
    },
    {
      "id": 15,
      "category": "HTML",
      "question": "What does the `<a>` tag define?",
      "options": [
        {
          "id": "a",
          "text": "An article"
        },
        {
          "id": "b",
          "text": "An abbreviation"
        },
        {
          "id": "c",
          "text": "A hyperlink"
        },
        {
          "id": "d",
          "text": "An aside"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10
    },
    {
      "id": 16,
      "category": "HTML",
      "question": "Which attribute specifies a unique id for an HTML element?",
      "options": [
        {
          "id": "a",
          "text": "class"
        },
        {
          "id": "b",
          "text": "id"
        },
        {
          "id": "c",
          "text": "name"
        },
        {
          "id": "d",
          "text": "identifier"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "easy",
      "points": 10
    },
    {
      "id": 17,
      "category": "HTML",
      "question": "Which HTML element is used to specify a footer for a document or section?",
      "options": [
        {
          "id": "a",
          "text": "<bottom>"
        },
        {
          "id": "b",
          "text": "<section>"
        },
        {
          "id": "c",
          "text": "<footer>"
        },
        {
          "id": "d",
          "text": "<end>"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20
    },
    {
      "id": 18,
      "category": "HTML",
      "question": "What is the purpose of the `<canvas>` element?",
      "options": [
        {
          "id": "a",
          "text": "To display tabular data"
        },
        {
          "id": "b",
          "text": "To embed video content"
        },
        {
          "id": "c",
          "text": "To draw graphics, on the fly, via scripting (usually JavaScript)"
        },
        {
          "id": "d",
          "text": "To create input controls for forms"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20
    },
    {
      "id": 19,
      "category": "HTML",
      "question": "Which input type defines a slider control?",
      "options": [
        {
          "id": "a",
          "text": "search"
        },
        {
          "id": "b",
          "text": "range"
        },
        {
          "id": "c",
          "text": "slider"
        },
        {
          "id": "d",
          "text": "number"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20
    },
    {
      "id": 20,
      "category": "HTML",
      "question": "What does the `DOCTYPE` declaration do?",
      "options": [
        {
          "id": "a",
          "text": "It defines the character set for the document"
        },
        {
          "id": "b",
          "text": "It links to an external stylesheet"
        },
        {
          "id": "c",
          "text": "It informs the browser about the document type and version of HTML"
        },
        {
          "id": "d",
          "text": "It creates a new document object"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30
    },
    {
      "id": 21,
      "category": "HTML",
      "question": "Which tag is used to define navigation links?",
      "options": [
        {
          "id": "a",
          "text": "<navigate>"
        },
        {
          "id": "b",
          "text": "<nav>"
        },
        {
          "id": "c",
          "text": "<navigation>"
        },
        {
          "id": "d",
          "text": "<links>"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20
    },
    {
      "id": 22,
      "category": "HTML",
      "question": "What is the difference between `<strong>` and `<b>` tags?",
      "options": [
        {
          "id": "a",
          "text": "There is no difference, they both make text bold"
        },
        {
          "id": "b",
          "text": "`<strong>` is semantic for importance, `<b>` is purely presentational bold"
        },
        {
          "id": "c",
          "text": "`<b>` is semantic for importance, `<strong>` is purely presentational bold"
        },
        {
          "id": "d",
          "text": "`<strong>` makes text larger, `<b>` makes text bold"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "hard",
      "points": 30
    },
    {
      "id": 23,
      "category": "CSS",
      "question": "What does CSS stand for?",
      "options": [
        {
          "id": "a",
          "text": "Creative Style Sheets"
        },
        {
          "id": "b",
          "text": "Computer Style Sheets"
        },
        {
          "id": "c",
          "text": "Cascading Style Sheets"
        },
        {
          "id": "d",
          "text": "Colorful Style Sheets"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10
    },
    {
      "id": 24,
      "category": "CSS",
      "question": "Which HTML attribute is used to define inline styles?",
      "options": [
        {
          "id": "a",
          "text": "class"
        },
        {
          "id": "b",
          "text": "styles"
        },
        {
          "id": "c",
          "text": "font"
        },
        {
          "id": "d",
          "text": "style"
        }
      ],
      "correctAnswerId": "d",
      "difficulty": "easy",
      "points": 10
    },
    {
      "id": 25,
      "category": "CSS",
      "question": "Which property is used to change the background color?",
      "options": [
        {
          "id": "a",
          "text": "color"
        },
        {
          "id": "b",
          "text": "bgcolor"
        },
        {
          "id": "c",
          "text": "background-color"
        },
        {
          "id": "d",
          "text": "background"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10
    },
    {
      "id": 26,
      "category": "CSS",
      "question": "How do you select an element with id 'header'?",
      "options": [
        {
          "id": "a",
          "text": ".header"
        },
        {
          "id": "b",
          "text": "*header"
        },
        {
          "id": "c",
          "text": "header"
        },
        {
          "id": "d",
          "text": "#header"
        }
      ],
      "correctAnswerId": "d",
      "difficulty": "easy",
      "points": 10
    },
    {
      "id": 27,
      "category": "CSS",
      "question": "Which property controls the space between the content and the border of an element?",
      "options": [
        {
          "id": "a",
          "text": "margin"
        },
        {
          "id": "b",
          "text": "padding"
        },
        {
          "id": "c",
          "text": "border-spacing"
        },
        {
          "id": "d",
          "text": "outline"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20
    },
    {
      "id": 28,
      "category": "CSS",
      "question": "What does the `z-index` property control?",
      "options": [
        {
          "id": "a",
          "text": "The zoom level of an element"
        },
        {
          "id": "b",
          "text": "The stack order (depth) of positioned elements"
        },
        {
          "id": "c",
          "text": "The horizontal alignment"
        },
        {
          "id": "d",
          "text": "The text indentation"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20
    },
    {
      "id": 29,
      "category": "CSS",
      "question": "Which value of the `display` property makes an element behave like an inline element but allows setting width and height?",
      "options": [
        {
          "id": "a",
          "text": "block"
        },
        {
          "id": "b",
          "text": "inline"
        },
        {
          "id": "c",
          "text": "inline-block"
        },
        {
          "id": "d",
          "text": "flex"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "medium",
      "points": 20
    },
    {
      "id": 30,
      "category": "CSS",
      "question": "What is CSS Specificity?",
      "options": [
        {
          "id": "a",
          "text": "A measure of how fast CSS rules are applied"
        },
        {
          "id": "b",
          "text": "The algorithm browsers use to determine which CSS rule applies if multiple rules target the same element"
        },
        {
          "id": "c",
          "text": "A way to specify styles for specific browsers"
        },
        {
          "id": "d",
          "text": "The file size of a CSS document"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "hard",
      "points": 30
    },
    {
      "id": 31,
      "category": "CSS",
      "question": "Which CSS unit is relative to the font-size of the root element?",
      "options": [
        {
          "id": "a",
          "text": "em"
        },
        {
          "id": "b",
          "text": "px"
        },
        {
          "id": "c",
          "text": "%"
        },
        {
          "id": "d",
          "text": "rem"
        }
      ],
      "correctAnswerId": "d",
      "difficulty": "hard",
      "points": 30
    },
    {
      "id": 32,
      "category": "CSS",
      "question": "How do you center a block-level element (like a div) horizontally within its container?",
      "options": [
        {
          "id": "a",
          "text": "text-align: center;"
        },
        {
          "id": "b",
          "text": "margin: auto;"
        },
        {
          "id": "c",
          "text": "padding: auto;"
        },
        {
          "id": "d",
          "text": "align-items: center;"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20
    },
    {
      "id": 33,
      "category": "JavaScript",
      "question": "Inside which HTML element do we put the JavaScript?",
      "options": [
        {
          "id": "a",
          "text": "<js>"
        },
        {
          "id": "b",
          "text": "<javascript>"
        },
        {
          "id": "c",
          "text": "<scripting>"
        },
        {
          "id": "d",
          "text": "<script>"
        }
      ],
      "correctAnswerId": "d",
      "difficulty": "easy",
      "points": 10
    },
    {
      "id": 34,
      "category": "JavaScript",
      "question": "How do you write 'Hello World' in an alert box?",
      "options": [
        {
          "id": "a",
          "text": "msg('Hello World');"
        },
        {
          "id": "b",
          "text": "alertBox('Hello World');"
        },
        {
          "id": "c",
          "text": "alert('Hello World');"
        },
        {
          "id": "d",
          "text": "msgBox('Hello World');"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10
    },
    {
      "id": 35,
      "category": "JavaScript",
      "question": "How do you create a function in JavaScript?",
      "options": [
        {
          "id": "a",
          "text": "function:myFunction()"
        },
        {
          "id": "b",
          "text": "function = myFunction()"
        },
        {
          "id": "c",
          "text": "function myFunction()"
        },
        {
          "id": "d",
          "text": "create function myFunction()"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10
    },
    {
      "id": 36,
      "category": "JavaScript",
      "question": "How do you call a function named 'myFunction'?",
      "options": [
        {
          "id": "a",
          "text": "call function myFunction()"
        },
        {
          "id": "b",
          "text": "call myFunction()"
        },
        {
          "id": "c",
          "text": "myFunction()"
        },
        {
          "id": "d",
          "text": "execute myFunction()"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10
    },
    {
      "id": 37,
      "category": "JavaScript",
      "question": "How can you add a comment in JavaScript?",
      "options": [
        {
          "id": "a",
          "text": "'This is a comment"
        },
        {
          "id": "b",
          "text": "<!--This is a comment-->"
        },
        {
          "id": "c",
          "text": "// This is a comment"
        },
        {
          "id": "d",
          "text": "** This is a comment **"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10
    },
    {
      "id": 38,
      "category": "JavaScript",
      "question": "What is the correct way to write a JavaScript array?",
      "options": [
        {
          "id": "a",
          "text": "var colors = (1:'red', 2:'green', 3:'blue')"
        },
        {
          "id": "b",
          "text": "var colors = ['red', 'green', 'blue']"
        },
        {
          "id": "c",
          "text": "var colors = 'red', 'green', 'blue'"
        },
        {
          "id": "d",
          "text": "var colors = { 'red', 'green', 'blue' }"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20
    },
    {
      "id": 39,
      "category": "JavaScript",
      "question": "Which event occurs when the user clicks on an HTML element?",
      "options": [
        {
          "id": "a",
          "text": "onchange"
        },
        {
          "id": "b",
          "text": "onmouseclick"
        },
        {
          "id": "c",
          "text": "onmouseover"
        },
        {
          "id": "d",
          "text": "onclick"
        }
      ],
      "correctAnswerId": "d",
      "difficulty": "medium",
      "points": 20
    },
    {
      "id": 40,
      "category": "JavaScript",
      "question": "What does `JSON.stringify()` do?",
      "options": [
        {
          "id": "a",
          "text": "Parses a JSON string into a JavaScript object"
        },
        {
          "id": "b",
          "text": "Converts a JavaScript object or value into a JSON string"
        },
        {
          "id": "c",
          "text": "Validates a JSON string"
        },
        {
          "id": "d",
          "text": "Fetches data from a JSON file"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20
    },
    {
      "id": 41,
      "category": "JavaScript",
      "question": "What is a 'closure' in JavaScript?",
      "options": [
        {
          "id": "a",
          "text": "A way to close the browser window"
        },
        {
          "id": "b",
          "text": "A syntax error that closes the script"
        },
        {
          "id": "c",
          "text": "A function having access to the parent scope, even after the parent function has closed"
        },
        {
          "id": "d",
          "text": "The final statement in a function"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30
    },
    {
      "id": 42,
      "category": "JavaScript",
      "question": "What is the purpose of `async` and `await` keywords?",
      "options": [
        {
          "id": "a",
          "text": "To define synchronous functions"
        },
        {
          "id": "b",
          "text": "To handle errors in code"
        },
        {
          "id": "c",
          "text": "To write asynchronous code in a more synchronous-looking fashion, handling Promises"
        },
        {
          "id": "d",
          "text": "To declare variables that change asynchronously"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30
    },
    {
      "id": 43,
      "category": "React",
      "question": "What is React primarily used for?",
      "options": [
        {
          "id": "a",
          "text": "Server-side scripting"
        },
        {
          "id": "b",
          "text": "Database management"
        },
        {
          "id": "c",
          "text": "Building user interfaces"
        },
        {
          "id": "d",
          "text": "Machine learning"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10
    },
    {
      "id": 44,
      "category": "React",
      "question": "What is JSX?",
      "options": [
        {
          "id": "a",
          "text": "A JavaScript data format"
        },
        {
          "id": "b",
          "text": "A CSS preprocessor"
        },
        {
          "id": "c",
          "text": "A syntax extension for JavaScript, often used with React to describe UI structure"
        },
        {
          "id": "d",
          "text": "A type of React component"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10
    },
    {
      "id": 45,
      "category": "React",
      "question": "How do you pass data from a parent component to a child component?",
      "options": [
        {
          "id": "a",
          "text": "Using state"
        },
        {
          "id": "b",
          "text": "Using props"
        },
        {
          "id": "c",
          "text": "Using context"
        },
        {
          "id": "d",
          "text": "Using refs"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "easy",
      "points": 10
    },
    {
      "id": 46,
      "category": "React",
      "question": "Which hook would you use to add state to a functional component?",
      "options": [
        {
          "id": "a",
          "text": "useEffect"
        },
        {
          "id": "b",
          "text": "useContext"
        },
        {
          "id": "c",
          "text": "useState"
        },
        {
          "id": "d",
          "text": "useReducer"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "easy",
      "points": 10
    },
    {
      "id": 47,
      "category": "React",
      "question": "What is the purpose of the `useEffect` hook?",
      "options": [
        {
          "id": "a",
          "text": "To manage component state"
        },
        {
          "id": "b",
          "text": "To perform side effects in functional components (e.g., data fetching, subscriptions)"
        },
        {
          "id": "c",
          "text": "To pass data between components"
        },
        {
          "id": "d",
          "text": "To define the component's structure"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20
    },
    {
      "id": 48,
      "category": "React",
      "question": "How do you render a list of items in React?",
      "options": [
        {
          "id": "a",
          "text": "Using a `for` loop directly inside JSX"
        },
        {
          "id": "b",
          "text": "Using the `.map()` array method inside JSX"
        },
        {
          "id": "c",
          "text": "Using the `<list>` component"
        },
        {
          "id": "d",
          "text": "Using `forEach` inside JSX"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20
    },
    {
      "id": 49,
      "category": "React",
      "question": "What is required for each item when rendering a list using `.map()`?",
      "options": [
        {
          "id": "a",
          "text": "A unique `id` attribute"
        },
        {
          "id": "b",
          "text": "A unique `key` prop"
        },
        {
          "id": "c",
          "text": "A `className` prop"
        },
        {
          "id": "d",
          "text": "An `index` prop"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20
    },
    {
      "id": 50,
      "category": "React",
      "question": "What is the difference between state and props?",
      "options": [
        {
          "id": "a",
          "text": "Props are managed within the component, state is passed from the parent"
        },
        {
          "id": "b",
          "text": "State is managed within the component, props are passed from the parent"
        },
        {
          "id": "c",
          "text": "Both are managed within the component"
        },
        {
          "id": "d",
          "text": "Both are passed from the parent"
        }
      ],
      "correctAnswerId": "b",
      "difficulty": "medium",
      "points": 20
    },
    {
      "id": 51,
      "category": "React",
      "question": "What problem does the `useContext` hook solve?",
      "options": [
        {
          "id": "a",
          "text": "Managing local component state"
        },
        {
          "id": "b",
          "text": "Performing side effects"
        },
        {
          "id": "c",
          "text": "Avoiding 'prop drilling' by allowing components to consume data from a context provider"
        },
        {
          "id": "d",
          "text": "Memoizing expensive calculations"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30
    },
    {
      "id": 52,
      "category": "React",
      "question": "What is the Virtual DOM?",
      "options": [
        {
          "id": "a",
          "text": "A direct representation of the actual browser DOM"
        },
        {
          "id": "b",
          "text": "A backup copy of the DOM stored in localStorage"
        },
        {
          "id": "c",
          "text": "A programming concept where a virtual representation of a UI is kept in memory and synced with the real DOM by a library like React DOM"
        },
        {
          "id": "d",
          "text": "A specific HTML element for creating virtual reality experiences"
        }
      ],
      "correctAnswerId": "c",
      "difficulty": "hard",
      "points": 30
    }
  ],
  "highestScores": [
    {
      "id": "html_easy",
      "category": "html",
      "difficultySetting": "easy",
      "userName": "ReiKoka",
      "score": 40,
      "time": 10,
      "date": "2023-10-27T10:30:00.000Z"
    },
    {
      "id": "css_easy",
      "category": "css",
      "difficultySetting": "easy",
      "userName": "ReiKoka",
      "score": 40,
      "time": 10
    },
    {
      "id": "html_all",
      "category": "html",
      "difficultySetting": "all",
      "userName": "Rei Koka",
      "score": 180,
      "time": 23,
      "date": "2025-04-02T10:01:42.219Z"
    }
  ],
  "results": [
    {
      "id": "892f",
      "category": "HTML",
      "difficultySetting": "easy",
      "userName": "ReiKoka",
      "points": 40,
      "maxPossiblePoints": 40,
      "totalTimeTaken": 10,
      "date": "2025-04-02T09:07:44.060Z"
    },
    {
      "id": "0a9e",
      "category": "HTML",
      "difficultySetting": "all",
      "userName": "Rei Koka",
      "points": 180,
      "maxPossiblePoints": 180,
      "totalTimeTaken": 23,
      "date": "2025-04-02T10:01:42.167Z"
    }
  ]
}
